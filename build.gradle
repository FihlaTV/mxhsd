/*
 * mxhsd - Corporate Matrix Homeserver
 * Copyright (C) 2017 Maxime Dor
 *
 * https://www.kamax.io/
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import java.util.regex.Pattern

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

String gitVersion() {
    def versionPattern = Pattern.compile("v(\\d+\\.)?(\\d+\\.)?(\\d+)(-.*)?")
    ByteArrayOutputStream out = new ByteArrayOutputStream()
    def o = exec {
        commandLine = ['git', 'describe', '--tags', '--always', '--dirty']
        standardOutput = out
        errorOutput = out
        ignoreExitValue = true
    }
    if (o.exitValue != 0) {
        if (o.exitValue != 128) {
            printf("Unable to determine git version: %s", out.toString())
        }

        return "UNKNOWN"
    }

    def v = out.toString().replace(System.lineSeparator(), '')
    return versionPattern.matcher(v).matches() ? v.substring(1) : v
}

def dockerImageName = propValue('docker.image.name', project.name)
def dockerImageTag = propValue('docker.image.tag', gitVersion())
def dockerImage = dockerImageName + ':' + dockerImageTag

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE'
    }
}

repositories {
    maven { url "https://kamax.io/maven/releases" }
    maven { url "https://kamax.io/maven/snapshots" }
    mavenCentral()
}

dependencies {
    // Various utilities
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'com.google.guava:guava:23.6-jre'

    // Matrix Java SDK
    compile 'io.kamax:matrix-java-sdk:0.0.11'

    // Spring boot for HTTP container
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.7.RELEASE'

    // Event bus
    compile 'net.engio:mbassador:1.3.1'

    // DNS lookups
    compile 'dnsjava:dnsjava:2.1.8'

    // HTTP Client
    compile 'org.apache.httpcomponents:httpclient:4.5.4'

    testCompile 'junit:junit:4.12'
}

processResources {
    doLast {
        def configFile = new File(project.rootDir, 'build/resources/main/application.yaml')
        String configContent = configFile.getText('UTF-8')
        configContent = configContent.replaceAll(/info\.build\.version:.*/, "info.build.version: '${gitVersion()}'")
        configFile.write(configContent, 'UTF-8')
    }
}

springBoot {
    executable = true
}

task dockerBuild(type: Exec, dependsOn: build) {
    commandLine 'docker', 'build', '-t', dockerImage, project.rootDir

    doLast {
        exec {
            commandLine 'docker', 'tag', dockerImage, "${dockerImageName}:latest-dev"
        }
    }
}
